// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model DexInfo {
  id             Int @id @default(autoincrement())
  nationalDexAPI Int @unique
  BaseInfo       BaseInfo?

  nationalDex    Int?
  nameJA         String
  nameEN         String
}

// 外部キーなし 1対多になりTypeInfoの役割が矛盾するため
model TypeInfo {
  typeID   Int    @id @unique
  typeName String @unique
}

model AbilityInfo {
  abilityID   Int    @id @unique
  abilityName String @unique
}

model MoveInfo {
  moveID   Int    @id @unique
  moveName String @unique
}

model ItemInfo {
  itemID   Int    @id @unique
  itemName String @unique
}

model NatureInfo {
  natureID   Int    @id @unique
  natureName String @unique
}

model MoveLearnList {
  id           Int @id @default(autoincrement())
  movenationalDexAPI Int
  moveID        Int
  moveLevel     Int
  moveVersion   String

  // baseNationalDexAPIで紐づける
  baseInfo      BaseInfo? @relation(fields: [movenationalDexAPI], references: [basenationalDexAPI], onDelete: Cascade)
}

model BaseInfo {
  id               Int      @id @default(autoincrement())
  //! 外部キー制約すると Unknown argument Errorが出る
  basenationalDexAPI Int    @unique
  type1            Int
  type2            Int?
  ability1         Int
  ability2         Int?
  ability3         Int?
  baseHP           Int
  baseAttack       Int
  baseDefense      Int
  baseSpAttack     Int
  baseSpDefense    Int
  baseSpeed        Int
  dexInfo          DexInfo? @relation(fields: [f_nationalDexAPI], references: [nationalDexAPI])
  moveInfo         MoveLearnList[]

  // データベースとして保存されるが createはで使わない(null が入る)
  f_nationalDexAPI Int? @unique // 検索用
}

// model BaseInfo {
//   // 一意的なIDがprismaは必要
//   id           Int @id @default(autoincrement())
//   // One to Oneの関係
//   dexInfo     DexInfo @relation(fields: [basenationalDexAPI], references: [nationalDexAPI])
//   basenationalDexAPI Int @unique

//   type1          Int
//   type2          Int
//   ability1       Int
//   ability2       Int
//   ability3       Int
//   baseHP         Int
//   baseAttack     Int
//   baseDefense    Int
//   baseSpAttack   Int
//   baseSpDefense  Int
//   baseSpeed      Int

//   // // 多対多の関係
//   // moves       MoveLearnList[]
// }